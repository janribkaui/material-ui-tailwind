version: 2.1
orbs:
  aws-cli: circleci/aws-cli@4.2.3
  aws-s3: circleci/aws-s3@4.0

parameters:
  browserstack-force:
    description: Whether to force browserstack usage. We have limited resources on browserstack so the pipeline might decide to skip browserstack if this parameter isn't set to true.
    type: boolean
    default: false
  react-version:
    description: The version of react to be used
    type: string
    default: stable
  workflow:
    description: The name of the workflow to run
    type: string
    default: pipeline
  e2e-base-url:
    description: The base url for running end-to-end test
    type: string
    default: ''

default-job: &default-job
  parameters:
    react-version:
      description: The version of react to be used
      type: string
      default: << pipeline.parameters.react-version >>
    test-gate:
      description: A particular type of tests that should be run
      type: string
      default: undefined
    e2e-base-url:
      description: The base url for running end-to-end test
      type: string
      default: << pipeline.parameters.e2e-base-url >>
  environment:
    # expose it globally otherwise we have to thread it from each job to the install command
    BROWSERSTACK_FORCE: << pipeline.parameters.browserstack-force >>
    REACT_VERSION: << parameters.react-version >>
    TEST_GATE: << parameters.test-gate >>
    AWS_REGION_ARTIFACTS: eu-central-1
    COREPACK_ENABLE_DOWNLOAD_PROMPT: '0'
  working_directory: /tmp/material-ui-tailwind
  docker:
    - image: cimg/node:20.17

default-context: &default-context
  context:
    - org-global

# CircleCI has disabled the cache across forks for security reasons.
# Following their official statement, it was a quick solution, they
# are working on providing this feature back with appropriate security measures.
# https://discuss.circleci.com/t/saving-cache-stopped-working-warning-skipping-this-step-disabled-in-configuration/24423/21
#
# restore_repo: &restore_repo
#   restore_cache:
#     key: v1-repo-{{ .Branch }}-{{ .Revision }}

commands:
  setup_corepack:
    parameters:
      browsers:
        type: boolean
        default: false
        description: 'Set to true if you intend to any browser (for example with playwright).'
    steps:
      - when:
          condition: << parameters.browsers >>
          steps:
            - run:
                name: Install pnpm package manager
                command: corepack enable
      - when:
          condition:
            not: << parameters.browsers >>
          steps:
            - run:
                name: Install pnpm package manager
                # See https://stackoverflow.com/a/73411601
                command: corepack enable --install-directory ~/bin

      - run:
          name: View install environment
          command: |
            node --version
            pnpm --version

  install_js:
    parameters:
      browsers:
        type: boolean
        default: false
        description: 'Set to true if you intend to any browser (for example with playwright).'

    steps:
      - setup_corepack:
          browsers: << parameters.browsers >>

      - run:
          name: Install js dependencies
          command: pnpm install

jobs:
  checkout:
    <<: *default-job
    steps:
      - checkout
      - install_js
      - when:
          # Install can be "dirty" when running with non-default versions of React
          condition:
            equal: [<< parameters.react-version >>, stable]
          steps:
            - run:
                name: Should not have any git not staged
                command: git add -A && git diff --exit-code --staged
            - run:
                name: '`pnpm dedupe` was run?'
                command: |
                  # #default-branch-switch
                  if [[ $(git diff --name-status master | grep -E 'pnpm-workspace\.yaml|pnpm-lock.yaml|package\.json') == "" ]];
                  then
                      echo "No changes to dependencies detected. Skipping..."
                  else
                      pnpm dedupe --check
                  fi
  test_lint:
    <<: *default-job
    steps:
      - checkout
      - install_js
      - run:
          name: Eslint
          command: pnpm eslint:ci
      - run:
          name: Stylelint
          command: pnpm stylelint
      - run:
          name: Lint JSON
          command: pnpm jsonlint
      - run:
          name: Lint Markdown
          command: pnpm markdownlint
      - run:
          name: Lint writing style
          command: |
            vale sync
            pnpm valelint
  test_static:
    <<: *default-job
    steps:
      - checkout
      - install_js
      - run:
          name: '`pnpm prettier` changes committed?'
          command: pnpm prettier --check
      - run:
          name: Generate PropTypes
          command: pnpm proptypes
      - run:
          name: '`pnpm extract-error-codes` changes committed?'
          command: |
            pnpm extract-error-codes
            git add -A && git diff --exit-code --staged
  test_types:
    <<: *default-job
    resource_class: 'medium+'
    steps:
      - checkout
      - install_js
      - run:
          name: Tests TypeScript definitions
          command: pnpm typescript:ci
          environment:
            NODE_OPTIONS: --max-old-space-size=3072
      - run:
          name: Test module augmentation
          command: |
            pnpm --filter @janribkaui/material-ui-tailwind typescript:module-augmentation
      - run:
          name: Diff declaration files
          command: |
            git add -f packages/janribkaui-material-ui-tailwind/build || echo '/material declarations do not exist'
            git add -f packages/janribkaui-lab/build || echo '/lab declarations do not exist'
            git add -f packages/janribkaui-utils/build || echo '/utils declarations do not exist'
            pnpm -r build:types
            git --no-pager diff
      - run:
          name: Any defect declaration files?
          command: node scripts/testBuiltTypes.mjs
      - save_cache:
          name: Save generated declaration files
          key: typescript-declaration-files-{{ .Branch }}-{{ .Revision }}
          paths:
            # packages with generated declaration files
            - packages/janribkaui-material-ui-tailwind/build
            - packages/janribkaui-lab/build
            - packages/janribkaui-utils/build
  test_types_next:
    <<: *default-job
    resource_class: 'medium+'
    steps:
      - checkout
      - install_js
      - run:
          name: Resolve typescript version
          command: |
            pnpm update -r typescript@next
            # log a patch for maintainers who want to check out this change
            git --no-pager diff HEAD
      - run:
          name: Tests TypeScript definitions
          command: |
            # ignore build failures
            # it's expected that typescript@next fails since the lines of the errors
            # change frequently. This build is monitored regardless of its status
            set +e
            pnpm typescript:ci
            exit 0

      - restore_cache:
          name: Restore generated declaration files
          keys:
            # We assume that the target branch is `next` and that declaration files are persisted in commit order.
            # "If there are multiple matches, the most recently generated cache will be used."
            - typescript-declaration-files-next

      - run:
          name: Diff declaration files
          command: |
            git add -f packages/janribkaui-material-ui-tailwind/build || echo '/core declarations do not exist'
            git add -f packages/janribkaui-lab/build || echo '/lab declarations do not exist'
            git add -f packages/janribkaui-utils/build || echo '/utils declarations do not exist'
            pnpm -r build:types
            git --no-pager diff

      - run:
          name: Log defect declaration files
          command: |
            # ignore build failures
            # Fixing these takes some effort that isn't viable to merge in a single PR.
            # We'll simply monitor them for now.
            set +e
            node scripts/testBuiltTypes.mjs
            exit 0
